use std::collections::HashMap;
use once_cell::sync::Lazy;

pub static LANGUAGES: Lazy<HashMap<&str, &str>> = Lazy::new(|| {
    let mut m = HashMap::new();
    m.insert("auto", "Detect language");
    m.insert("af", "Afrikaans");
    m.insert("sq", "Albanian");
    m.insert("am", "Amharic");
    m.insert("ar", "Arabic");
    m.insert("hy", "Armenian");
    m.insert("az", "Azerbaijani");
    m.insert("eu", "Basque");
    m.insert("be", "Belarusian");
    m.insert("bn", "Bengali");
    m.insert("bs", "Bosnian");
    m.insert("bg", "Bulgarian");
    m.insert("ca", "Catalan");
    m.insert("ceb", "Cebuano");
    m.insert("zh-CN", "Chinese (Simplified)");
    m.insert("zh-TW", "Chinese (Traditional)");
    m.insert("co", "Corsican");
    m.insert("hr", "Croatian");
    m.insert("cs", "Czech");
    m.insert("da", "Danish");
    m.insert("nl", "Dutch");
    m.insert("en", "English");
    m.insert("eo", "Esperanto");
    m.insert("et", "Estonian");
    m.insert("fi", "Finnish");
    m.insert("fr", "French");
    m.insert("fy", "Frisian");
    m.insert("gl", "Galician");
    m.insert("ka", "Georgian");
    m.insert("de", "German");
    m.insert("el", "Greek");
    m.insert("gu", "Gujarati");
    m.insert("ht", "Haitian Creole");
    m.insert("ha", "Hausa");
    m.insert("haw", "Hawaiian");
    m.insert("he", "Hebrew");
    m.insert("hi", "Hindi");
    m.insert("hmn", "Hmong");
    m.insert("hu", "Hungarian");
    m.insert("is", "Icelandic");
    m.insert("ig", "Igbo");
    m.insert("id", "Indonesian");
    m.insert("ga", "Irish");
    m.insert("it", "Italian");
    m.insert("ja", "Japanese");
    m.insert("jv", "Javanese");
    m.insert("kn", "Kannada");
    m.insert("kk", "Kazakh");
    m.insert("km", "Khmer");
    m.insert("ko", "Korean");
    m.insert("ku", "Kurdish");
    m.insert("ky", "Kyrgyz");
    m.insert("lo", "Lao");
    m.insert("la", "Latin");
    m.insert("lv", "Latvian");
    m.insert("lt", "Lithuanian");
    m.insert("lb", "Luxembourgish");
    m.insert("mk", "Macedonian");
    m.insert("mg", "Malagasy");
    m.insert("ms", "Malay");
    m.insert("ml", "Malayalam");
    m.insert("mt", "Maltese");
    m.insert("mi", "Maori");
    m.insert("mr", "Marathi");
    m.insert("mn", "Mongolian");
    m.insert("my", "Myanmar (Burmese)");
    m.insert("ne", "Nepali");
    m.insert("no", "Norwegian");
    m.insert("ny", "Nyanja (Chichewa)");
    m.insert("or", "Odia (Oriya)");
    m.insert("ps", "Pashto");
    m.insert("fa", "Persian");
    m.insert("pl", "Polish");
    m.insert("pt", "Portuguese");
    m.insert("pa", "Punjabi");
    m.insert("ro", "Romanian");
    m.insert("ru", "Russian");
    m.insert("sm", "Samoan");
    m.insert("gd", "Scots Gaelic");
    m.insert("sr", "Serbian");
    m.insert("st", "Sesotho");
    m.insert("sn", "Shona");
    m.insert("sd", "Sindhi");
    m.insert("si", "Sinhala (Sinhalese)");
    m.insert("sk", "Slovak");
    m.insert("sl", "Slovenian");
    m.insert("so", "Somali");
    m.insert("es", "Spanish");
    m.insert("su", "Sundanese");
    m.insert("sw", "Swahili");
    m.insert("sv", "Swedish");
    m.insert("tl", "Tagalog (Filipino)");
    m.insert("tg", "Tajik");
    m.insert("ta", "Tamil");
    m.insert("tt", "Tatar");
    m.insert("te", "Telugu");
    m.insert("th", "Thai");
    m.insert("tr", "Turkish");
    m.insert("tk", "Turkmen");
    m.insert("uk", "Ukrainian");
    m.insert("ur", "Urdu");
    m.insert("ug", "Uyghur");
    m.insert("uz", "Uzbek");
    m.insert("vi", "Vietnamese");
    m.insert("cy", "Welsh");
    m.insert("xh", "Xhosa");
    m.insert("yi", "Yiddish");
    m.insert("yo", "Yoruba");
    m.insert("zu", "Zulu");
    m
});